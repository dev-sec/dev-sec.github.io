{"name":"ssl-baseline","title":"DevSec SSL/TLS Baseline","summary":"Ensures a secure configuration for TCP ports","maintainer":"DevSec Hardening Framework Team","copyright":"DevSec Hardening Framework Team & Chef Software Inc.","copyright_email":"hello@dev-sec.io","license":"Apache-2.0","version":"1.3.0","supports":[{"inspec_version":">= 1.21.0"},{"platform-family":"unix"}],"controls":[{"title":"Inspec::Version=3.9.3","desc":null,"descriptions":{},"impact":0.0,"refs":[],"tags":{},"code":"control 'debugging' do\n  title \"Inspec::Version=#{Inspec::VERSION}\"\n  impact 0.0\n  describe \"tcpports=\\n#{tcpports.join(\"\\n\")}\" do\n    it { should_not eq nil }\n  end\n  describe \"sslports=\\n#{sslports.join(\"\\n\")}\" do\n    it { should_not eq nil }\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":66},"id":"debugging"},{"title":"Disable SSL 2 from all exposed SSL ports.","desc":null,"descriptions":{},"impact":1.0,"refs":[],"tags":{},"code":"control 'ssl2' do\n  title 'Disable SSL 2 from all exposed SSL ports.'\n  impact 1.0\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).protocols('ssl2') do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":82},"id":"ssl2"},{"title":"Disable SSL 3 from all exposed SSL ports.","desc":null,"descriptions":{},"impact":1.0,"refs":[],"tags":{},"code":"control 'ssl3' do\n  title 'Disable SSL 3 from all exposed SSL ports.'\n  impact 1.0\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).protocols('ssl3') do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":97},"id":"ssl3"},{"title":"Disable TLS 1.0 on exposed ports.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'tls1.0' do\n  title 'Disable TLS 1.0 on exposed ports.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).protocols('tls1.0') do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":112},"id":"tls1.0"},{"title":"Disable TLS 1.1 on exposed ports.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'tls1.1' do\n  title 'Disable TLS 1.1 on exposed ports.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).protocols('tls1.1') do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":127},"id":"tls1.1"},{"title":"Enable TLS 1.2 on exposed ports.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'tls1.2' do\n  title 'Enable TLS 1.2 on exposed ports.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).protocols('tls1.2') do\n      it(proc_desc) { should be_enabled }\n      it { should be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":142},"id":"tls1.2"},{"title":"Enable ECDH as KX from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'kx-ecdh' do\n  title 'Enable ECDH as KX from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/^TLS_ECDH/i) do\n      it(proc_desc) { should be_enabled }\n      it { should be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":161},"id":"kx-ecdh"},{"title":"Disable RSA as KX from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'kx-rsa' do\n  title 'Disable RSA as KX from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/^TLS_RSA/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":176},"id":"kx-rsa"},{"title":"Disable DH as KX from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'kx-dh' do\n  title 'Disable DH as KX from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/^TLS_DH/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":191},"id":"kx-dh"},{"title":"Disable KRB5 as KX from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'kx-krb5' do\n  title 'Disable KRB5 as KX from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/^TLS_KRB5/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":206},"id":"kx-krb5"},{"title":"Disable PSK as KX from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'kx-psk' do\n  title 'Disable PSK as KX from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/^TLS_PSK/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":221},"id":"kx-psk"},{"title":"Disable GOSTR as KX from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'kx-gostr' do\n  title 'Disable GOSTR as KX from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/^TLS_GOSTR/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":236},"id":"kx-gostr"},{"title":"Disable SRP as KX from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'kx-srp' do\n  title 'Disable SRP as KX from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/^TLS_SRP/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":251},"id":"kx-srp"},{"title":"Enable ECDSA or RSA as AU from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'au-ecdsa-rsa' do\n  title 'Enable ECDSA or RSA as AU from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/(RSA|ECDSA)_WITH/i) do\n      it(proc_desc) { should be_enabled }\n      it { should be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":271},"id":"au-ecdsa-rsa"},{"title":"Disable ANON as AU from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'au-anon' do\n  title 'Disable ANON as AU from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/ANON_WITH/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":286},"id":"au-anon"},{"title":"Disable DSS as AU from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'au-dss' do\n  title 'Disable DSS as AU from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/DSS_WITH/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":301},"id":"au-dss"},{"title":"Disable PSK as AU from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'au-psk' do\n  title 'Disable PSK as AU from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/PSK_WITH/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":316},"id":"au-psk"},{"title":"Disable EXPORT as AU from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'au-export' do\n  title 'Disable EXPORT as AU from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/((EXPORT)(\\d*)_WITH)/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":331},"id":"au-export"},{"title":"Enable AES256 or AES128 or AES256-GCM or AES128-GCM or CHACHA20 as Enc","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'enc-aes-gcm-chacha20' do\n  title 'Enable AES256 or AES128 or AES256-GCM or AES128-GCM or CHACHA20 as Enc'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/WITH_(AES_256|AES_128|CHACHA20|AES_256_GCM|AES_128_GCM)/i) do\n      it(proc_desc) { should be_enabled }\n      it { should be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":352},"id":"enc-aes-gcm-chacha20"},{"title":"Disable CBC as ENC from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'enc-cbc' do\n  title 'Disable CBC as ENC from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/(WITH_(\\w+)_(CBC))/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":367},"id":"enc-cbc"},{"title":"Disable RC4 as ENC from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'enc-rc4' do\n  title 'Disable RC4 as ENC from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/WITH_RC4/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":382},"id":"enc-rc4"},{"title":"Disable EXPORT as ENC from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'enc-export' do\n  title 'Disable EXPORT as ENC from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/WITH_EXPORT/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":397},"id":"enc-export"},{"title":"Disable DES, 3DES as ENC from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'enc-des' do\n  title 'Disable DES, 3DES as ENC from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/(WITH_(\\d*)(des))/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":412},"id":"enc-des"},{"title":"Disable eNULL as ENC from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'enc-enull' do\n  title 'Disable eNULL as ENC from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/WITH_NULL/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":427},"id":"enc-enull"},{"title":"Disable CAMELLIA as ENC from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'enc-camellia' do\n  title 'Disable CAMELLIA as ENC from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/WITH_CAMELLIA/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":442},"id":"enc-camellia"},{"title":"Disable SEED as ENC from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'enc-seed' do\n  title 'Disable SEED as ENC from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/WITH_SEED/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":457},"id":"enc-seed"},{"title":"Disable IDEA as ENC from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'enc-idea' do\n  title 'Disable IDEA as ENC from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/WITH_IDEA/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":472},"id":"enc-idea"},{"title":"Disable AES-CCM from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'enc-aes-ccm' do\n  title 'Disable AES-CCM from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/(WITH_AES_(\\w+)_(CCM))/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":487},"id":"enc-aes-ccm"},{"title":"Enable SHA384 or SHA256 or POLY1305 as Mac from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'mac-sha384-sha256-poly1305' do\n  title 'Enable SHA384 or SHA256 or POLY1305 as Mac from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/_(SHA384|SHA256|POLY1305)$/i) do\n      it(proc_desc) { should be_enabled }\n      it { should be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":507},"id":"mac-sha384-sha256-poly1305"},{"title":"Disable MD5 Mac from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'mac-md5' do\n  title 'Disable MD5 Mac from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/_MD5$/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":522},"id":"mac-md5"},{"title":"Disable SHA(1) Mac from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'mac-sha' do\n  title 'Disable SHA(1) Mac from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/_SHA$/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":537},"id":"mac-sha"},{"title":"Disable NULL Mac from all exposed SSL/TLS ports and versions.","desc":null,"descriptions":{},"impact":0.5,"refs":[],"tags":{},"code":"control 'mac-null' do\n  title 'Disable NULL Mac from all exposed SSL/TLS ports and versions.'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/_NULL$/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":552},"id":"mac-null"},{"title":"Return Of Bleichenbacher's Oracle Threat","desc":"ROBOT is the return of a 19-year-old vulnerability that allows performing RSA decryption and signing operations with the private key of a TLS server.","descriptions":{"default":"ROBOT is the return of a 19-year-old vulnerability that allows performing RSA decryption and signing operations with the private key of a TLS server."},"impact":0.5,"refs":[{"url":"https://ia.cr/2017/1189","ref":"Paper: Return Of Bleichenbacher's Oracle Threat (ROBOT)"}],"tags":{"sslattack":null,"tlsattack":null},"code":"control 'robotattack' do\n  title \"Return Of Bleichenbacher's Oracle Threat\"\n  desc 'ROBOT is the return of a 19-year-old vulnerability that allows performing RSA decryption and signing operations with the private key of a TLS server.'\n  ref \"Paper: Return Of Bleichenbacher's Oracle Threat (ROBOT)\", url: 'https://ia.cr/2017/1189'\n  tag 'sslattack', 'tlsattack'\n  impact 0.5\n  only_if { sslports.length > 0 }\n\n  sslports.each do |sslport|\n    # create a description\n    proc_desc = \"on node == #{target_hostname} running #{sslport[:socket].process.inspect} (#{sslport[:socket].pid})\"\n    describe ssl(sslport).ciphers(/^TLS_RSA/i) do\n      it(proc_desc) { should_not be_enabled }\n      it { should_not be_enabled }\n    end\n  end\nend\n","source_location":{"ref":"ssl-baseline-master/controls/ssl_test.rb","line":567},"id":"robotattack"}],"groups":[{"title":null,"controls":["debugging","ssl2","ssl3","tls1.0","tls1.1","tls1.2","kx-ecdh","kx-rsa","kx-dh","kx-krb5","kx-psk","kx-gostr","kx-srp","au-ecdsa-rsa","au-anon","au-dss","au-psk","au-export","enc-aes-gcm-chacha20","enc-cbc","enc-rc4","enc-export","enc-des","enc-enull","enc-camellia","enc-seed","enc-idea","enc-aes-ccm","mac-sha384-sha256-poly1305","mac-md5","mac-sha","mac-null","robotattack"],"id":"controls/ssl_test.rb"}],"inputs":[{"name":"invalid_targets","options":{"description":"Array of IPv4 and IPv6 Addresses to exclude","value":["127.0.0.1","0.0.0.0","::1","::"]}},{"name":"exclude_ports","options":{"description":"Array of TCP ports to exclude from SSL checking","value":[]}},{"name":"target_hostname","options":{"description":"Target hostname to check","value":""}}],"sha256":"b9b3b0e72994462c83900d201624d2369e28ed5d803e33d086c839842bec9be0","status":"loaded","generator":{"name":"inspec","version":"3.9.3"}}
